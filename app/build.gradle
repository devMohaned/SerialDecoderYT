plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("com.google.dagger.hilt.android")
    id 'kotlin-kapt'
}

android {
    namespace 'com.serial.decoder'
    compileSdk 33

    defaultConfig {
        applicationId "com.serial.decoder"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.serial.decoder.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // AndroidX Core Kotlin Package
    implementation 'androidx.core:core-ktx:1.7.0'
    // Activity for Compose
    implementation 'androidx.activity:activity-compose:1.3.1'
    // Composable UI
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    // Google's Material Design for Compose
    implementation "androidx.compose.material:material:$compose_ui_version"
    // Google's Package for Permission Handling
    implementation "com.google.accompanist:accompanist-pager:0.22.0-rc"
    // Handling multiple Form-Factors (Different Screen Sizes)
    implementation "androidx.compose.material3:material3-window-size-class:$material3_version"

    // CameraX
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"

    // Google's MLKit For Barcode scanning
    implementation "com.google.mlkit:barcode-scanning:$ml_barcode_version"

    //Camera Permission
    implementation "com.google.accompanist:accompanist-permissions:0.19.0"

    // ViewModel with compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Dagger Hilt for Dependency Injection
    implementation "com.google.dagger:hilt-android:$dagger_version"
    implementation 'androidx.navigation:navigation-testing:2.5.3'
    kapt "com.google.dagger:hilt-android-compiler:$dagger_version"
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Navigation With Compose
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Preference DataStore
    implementation("androidx.datastore:datastore-preferences:$pref_datastore")

    /*
     ===============
     Android Testing
     ===============
     */
    // Android JUnit Framework (4)
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"


    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Dagger Hilt Testing For instrumented tests.
    androidTestImplementation("com.google.dagger:hilt-android-testing:$dagger_version")

    // Mockito
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"


    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$dagger_version")

    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    /*
     *******************************
     Local Testing (JVM)
     *******************************
     */
    // JUnit Framework (4)
    testImplementation 'junit:junit:4.13.2'

    // Dagger Hilt Testing For Robolectric tests.
    testImplementation("com.google.dagger:hilt-android-testing:$dagger_version")
    // ...with Kotlin.
    kaptTest("com.google.dagger:hilt-android-compiler:$dagger_version")

    // Testing Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Mockito
    testImplementation "org.mockito:mockito-android:$mockito_version"



    /*
    For Debugging (With the project)
     */
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation("androidx.compose.ui:ui-test-manifest:1.4.0-alpha02")

}
// Allow references to generated code
kapt {
    correctErrorTypes = true
}